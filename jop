#!/bin/bash

cmd=$1
jop_user_dir=$(dirname $0)/.jop
jop_version=0.1
conf_file=$jop_user_dir/jop.conf

conf_get() {
    local file=$conf_file
    local key=$1
    sed -n "s#^$key=\(.*\)\$#\1#p" $file
}

conf_set() {
    local file=$conf_file
    local key=$1
    local value=$2
    local match=$(sed -n "s#^$key=.*\$#\0#p" $file)
    if [ "$match" = "" ]; then
        echo $key=$value>>$file
    else
        sed -i "s#^$key=.*\$#$key=$value#g" $file
    fi
}

mkdir -p $jop_user_dir
touch $conf_file
dir=$(conf_get dir)

init() {
    while [ "$dir" = "" ]; do
        read -p "please set dir: " dir
        conf_set dir $dir
    done
    mkdir -p $dir
    cd $dir
    while [ ! -d "$dir/.git" ]; do
        remote_url=
        while [ "$remote_url" = "" ]; do
            read -p "please set remote_url: " remote_url
        done
        git clone $remote_url $dir
        mkdir -p $dir/locks
    done
}

sync() {
    git add .
    git commit -m "$date"
    git pull
    git push
}

help() {
    echo "hello jop v$jop_version"
    echo " "
    echo "usage: jop <command> <args>"
    echo "  fetch        .. Fetch joplin notes from remote url"
    echo "  sync         .. Fetch and update joplin note"
    echo "    -i 5m      .. Sync interval (every 5m)"
    echo "  reset        .. Reset dir of joplin notes"
    echo "  upgrade      .. Upgrade jop"
    echo "  -- git <cmd> .. Execute git command"
    echo "  help         .. List available subcommands"
}

# main -----------------------------------------------------

case "$cmd" in
"reset")
    rm $conf_file
    ;;
"fetch")
    init
    git pull
    ;;
"sync")
    init
    if [ "$3" == "-i" ]; then
        interval=5m
        if [ -n "$4" ]; then
            interval=$4
        fi
        while true; do
            sync
            sleep $interval
        done
    else
        sync
    fi
    ;;
"upgrade")
    curl -L https://raw.githubusercontent.com/7hens/jop/main/jop -o jop
    ;;
"help")
    help
    ;;
"--")
    $3 $4 $5 $6 $7 $8 $9
    ;;
*)
    help
    init
    ;;
esac

