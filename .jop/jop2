#!/bin/bash

jop2_ver=1
jop_dir=$(dirname $0)
jop_conf=$jop_dir/jop.conf
jop2=$jop_dir/jop2
dir=

conf_get() {
    local file=$jop_conf
    local key=$1
    sed -n "s#^$key=\(.*\)\$#\1#p" $file
}

conf_set() {
    local file=$jop_conf
    local key=$1
    local value=$2
    local match=$(sed -n "s#^$key=.*\$#\0#p" $file)
    if [ "$match" = "" ]; then
        echo $key=$value>>$file
    else
        sed -i'' -e "s#^$key=.*\$#$key=$value#g" $file
    fi
}

init() {
    while [ "$dir" = "" ]; do
        read -p "please set dir: " dir
        dir=$(bash -c "echo $dir")
        conf_set dir $dir
    done
    while [ ! -d "$dir/.git" ]; do
        remote_url=
        while [ "$remote_url" = "" ]; do
            read -p "please set remote_url: " remote_url
        done
        git clone $remote_url $dir
    done
}

fetch() {
    cd $dir
    git pull --no-edit --allow-unrelated-histories -X diff-algorithm=patience
    if [ $? != 0 ]; then
        git checkout --ours .
        git add .
        git commit -m "MERGE: $(date)"
    fi
}

sync() {
    cd $dir
    git add .
    git commit -m "$(date)"
    fetch
    git push
}

help() {
    echo "hello jop v$jop2_ver"
    echo " "
    echo "usage: jop <command> <args>"
    echo "  f        .. Fetch joplin notes from remote url"
    echo "  s        .. Sync, fetch and update joplin notes"
    echo "    -i 5m  .. Sync interval (every 5m)"
    echo "  r        .. Reset dir of joplin notes"
    echo "  u        .. Upgrade jop"
    echo "  h        .. Help, list available subcommands"
    echo "jop res-del <id>"
    echo "           .. delete a spec resource"
    echo "  <cmd>    .. execute command on notes dir"
}

res-del() {
    if [ -z $1 ]; then
        echo "ERROR: a resource id is required" 1>&2
        return 1
    fi
    sqlite3 ~/.config/joplin-desktop/database.sqlite "delete from resources where id = '$1'"
    echo ok, please restart your joplin app to check it out
}

# main -----------------------------------------------------

cmd=$1
touch $jop_conf
dir=$(conf_get dir)

case "$cmd" in
"reset"|"r")
    conf_set dir ""
    dir=
    init
    ;;
"fetch"|"f")
    init
    fetch
    ;;
"sync"|"s"|"")
    init
    if [ "$3" == "-i" ]; then
        interval=5m
        if [ -n "$4" ]; then
            interval=$4
        fi
        while true; do
            sync
            sleep $interval
        done
    else
        sync
    fi
    ;;
"u")
    conf_set jop_ver $2
    conf_set jop2_ver $jop2_ver
    ;;
"help"|"h")
    help
    ;;
"--")
    cd $dir
    shift
    $*
    ;;
*)
    cd $dir
    $*
    ;;
esac

if [ -d "$dir" ]; then
    mkdir -p $dir/locks
fi
